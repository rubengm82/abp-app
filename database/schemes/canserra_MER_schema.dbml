
// =====================================================
// DATABASE SCHEMA - MER (ENTITY-RELATIONSHIP MODEL)
// DBML (Database Markup Language) Definition
// =====================================================

Project canserra_MER {
  database_type: 'MySQL'
  Note: '''
    # Database Schema - MER (Entity-Relationship Model)
    
    ## DESIGN RECOMMENDATIONS
    
    ### COMMENT AND NOTE MANAGEMENT
    - **Individual TEXT fields**: For simple observations (ACTIVITY.observations, RECORD.comments, etc.) are kept as direct TEXT fields for simplicity and performance.
    - **Separate tables for follow-ups**: Multiple follow-up fields (WORK_FOLLOW_UP, MAINTENANCE_FOLLOW_UP) should be implemented as separate tables to allow multiple entries per follow-up.
    
    ### DOCUMENT MANAGEMENT
    - **Filesystem storage**: Documents are stored in the filesystem (storage/app/public/documents/) with file paths stored in database for better performance and scalability.
    - **File metadata**: Complete metadata (size, MIME type, upload date, user) is stored in database tables.
    - **Current document fields**: Current VARCHAR(500) fields (ACTIVITY.file, RECORD.file, etc.) should be migrated to the new DOCUMENT tables in the implementation.
    
    ### FUTURE IMPLEMENTATION
    - **Phase 1**: Maintain current structure with TEXT and VARCHAR fields for documents
    - **Phase 2**: Implement separate DOCUMENTS table and migrate existing files
    - **Phase 3**: Create separate follow-up tables for WORK_FOLLOW_UP and MAINTENANCE_FOLLOW_UP
  '''
}

// =====================================================
// CORE TABLES
// =====================================================

//DONE
Table CENTER {
  id int [pk, increment, note: 'Primary key']
  name varchar(255) [not null, note: 'Center name']
  address varchar(500) [note: 'Center address']
  phone varchar(20) [note: 'Contact phone']
  email varchar(255) [note: 'Contact email']
}
//REMOVED - Locker functionality integrated into PROFESSIONAL table
//DONE
Table PROFESSIONAL {
  id int [pk, increment, note: 'Primary key']
  center_id int [ref: > CENTER.id, note: 'Reference to center']
  role varchar(100) [note: 'Professional role']
  name varchar(100) [not null, note: 'First name']
  surname1 varchar(100) [not null, note: 'First surname']
  surname2 varchar(100) [note: 'Second surname']
  phone varchar(20) [note: 'Contact phone']
  email varchar(255) [note: 'Contact email']
  address varchar(500) [note: 'Address']
  employment_status varchar(20) [default: 'Actiu', note: 'Status: Actiu, Suplencia, Baixa, No contractat']
  cvitae text [note: 'Curriculum vitae']
  login varchar(50) [unique, note: 'Login username']
  password varchar(255) [note: 'Password hash']
  key_code varchar(50) [note: 'Key code (moved from LOCKER table)']
  status int [default: 1, note: 'Status: 1=Active, 0=Inactive']
}

// =====================================================
// MATERIAL AND EQUIPMENT MANAGEMENT
// =====================================================

Table MATERIAL_ASSIGNMENT {
  id int [pk, increment, note: 'Primary key']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  shirt_size varchar(10) [note: 'Shirt size']
  pants_size varchar(10) [note: 'Pants size']
  shoe_size varchar(10) [note: 'Shoe size']
  assignment_date date [not null, note: 'Assignment date']
  assigned_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional who assigned']
  observations text [note: 'Observations about assignment']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

// =====================================================
// DEPRECATED TABLES (kept for reference)
// =====================================================

Table ACTIVITY {
  id int [pk, increment, note: 'Primary key - DEPRECATED']
  type varchar(50) [note: 'Activity type: proyecto, comision, tema_pendiente, mantenimiento']
  name varchar(255) [not null, note: 'Activity name']
  description text [note: 'Activity description']
  start_date date [note: 'Start date']
  end_date date [note: 'End date (nullable)']
  responsible varchar(255) [note: 'Responsible person (free text)']
  observations text [note: 'Observations']
  file varchar(500) [note: 'Attached file path']
}

Table PROFESSIONAL_ACTIVITY {
  professional_id int [ref: > PROFESSIONAL.id, note: 'Professional reference - DEPRECATED']
  activity_id int [ref: > ACTIVITY.id, note: 'Activity reference - DEPRECATED']
  
  indexes {
    (professional_id, activity_id) [pk]
  }
}

// =====================================================
// RECORD AND DOCUMENT MANAGEMENT
// =====================================================

Table RECORD {
  id int [pk, increment, note: 'Primary key']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  type varchar(50) [note: 'Record type: seguimiento, evaluacion, accidente, baja_larga, observacion']
  date date [not null, note: 'Record date']
  description text [note: 'Record description']
  comments text [note: 'Additional comments']
  file varchar(500) [note: 'Attached file path']
}

Table DOCUMENT {
  id int [pk, increment, note: 'Primary key']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  type varchar(100) [note: 'Document type']
  date date [note: 'Document date']
  filename varchar(255) [note: 'Document filename']
}

Table CENTER_DOCUMENTS {
  id int [pk, increment, note: 'Primary key']
  type varchar(100) [note: 'Document type']
  date date [note: 'Document date']
  description text [note: 'Document description']
  professional_id int [ref: > PROFESSIONAL.id, note: 'Professional who uploaded']
  documents varchar(500) [note: 'Document path']
}

// =====================================================
// SERVICE AND CONTACT MANAGEMENT
// =====================================================

Table SERVICE_CONTACT {
  id int [pk, increment, note: 'Primary key']
  type varchar(100) [note: 'Type: servicio_general, servicio_complementario, contacto_asistencial, contacto_general']
  responsible varchar(255) [note: 'Responsible person (free text)']
  phone varchar(20) [note: 'Contact phone']
  email varchar(255) [note: 'Contact email']
  observations text [note: 'Observations']
}

Table GENERAL_SERVICE {
  id int [pk, increment, note: 'Primary key']
  service_type varchar(100) [note: 'Service type']
  assigned_professional_id int [ref: > PROFESSIONAL.id, note: 'Assigned professional']
  contact_professional_id int [ref: > PROFESSIONAL.id, note: 'Contact professional']
  external_contact_id int [ref: > EXTERNAL_CONTACT.id, note: 'External contact reference']
  start_date date [note: 'Service start date']
  end_date date [note: 'Service end date']
}

Table COMPLEMENTARY_SERVICE {
  id int [pk, increment, note: 'Primary key']
  service_type varchar(100) [note: 'Service type']
  service_responsible varchar(255) [note: 'Service responsible (free text)']
  start_date date [note: 'Service start date']
  end_date date [note: 'Service end date']
  documents varchar(500) [note: 'Related documents']
}

Table EXTERNAL_CONTACT {
  id int [pk, increment, note: 'Primary key']
  external_contact_type varchar(100) [note: 'External contact type']
  service_reason varchar(255) [note: 'Service reason']
  company varchar(255) [note: 'Company name']
  name varchar(255) [note: 'Contact name']
  surname varchar(255) [note: 'Contact surname']
  phone varchar(20) [note: 'Contact phone']
  email varchar(255) [note: 'Contact email']
  observations text [note: 'Observations']
}

// =====================================================
// TRAINING AND COURSE MANAGEMENT
// =====================================================

Table COURSE {
  id int [pk, increment, note: 'Primary key']
  training_center varchar(255) [note: 'Training center name']
  forcem_code varchar(50) [note: 'FORCEM code']
  total_hours int [note: 'Total course hours']
  type varchar(100) [note: 'Course type']
  attendance_type varchar(20) [note: 'Attendance type: Presencial, Online, Mixto']
  training_name varchar(255) [note: 'Training name']
  workshop varchar(255) [note: 'Workshop name']
  conference_day varchar(255) [note: 'Conference day']
  congress varchar(255) [note: 'Congress name']
  attendee varchar(255) [note: 'Attendee name']
  start_date date [note: 'Course start date']
  end_date date [note: 'Course end date']
}

Table COURSE_ASSIGNMENT {
  id int [pk, increment, note: 'Primary key']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  course_id int [ref: > COURSE.id, not null, note: 'Course reference']
  certificate varchar(20) [default: 'Pendent', note: 'Certificate status: Entregat, Pendent']
}

// =====================================================
// FOLLOW-UP AND EVALUATION MANAGEMENT
// =====================================================

Table WORK_FOLLOW_UP {
  id int [pk, increment, note: 'Primary key']
  follow_up_type varchar(100) [note: 'Follow-up type']
  follow_up_date date [not null, note: 'Follow-up date']
  recorder_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional who recorded']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional being followed']
  topic varchar(255) [note: 'Follow-up topic']
  comment text [note: 'Follow-up comment']
}

Table EVALUATION {
  id int [pk, increment, note: 'Primary key']
  evaluator_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Evaluator professional']
  evaluated_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Evaluated professional']
  evaluation_date date [not null, note: 'Evaluation date']
  responses text [note: 'Evaluation responses']
}

// =====================================================
// INCIDENT AND ACCIDENT MANAGEMENT
// =====================================================

Table ACCIDENT {
  id int [pk, increment, note: 'Primary key']
  accident_type varchar(100) [note: 'Accident type']
  start_date date [not null, note: 'Accident start date']
  end_date date [note: 'Accident end date']
  description text [note: 'Accident description']
  reporting_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional who reported']
  injured_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Injured professional']
}

Table ACCIDENT_FOLLOW_UP {
  id int [pk, increment, note: 'Primary key']
  accident_id int [ref: > ACCIDENT.id, not null, note: 'Accident reference']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  follow_up_date date [not null, note: 'Follow-up date']
  description text [note: 'Follow-up description']
  notes text [note: 'Additional notes']
  documents varchar(500) [note: 'Related documents']
}

// =====================================================
// MAINTENANCE MANAGEMENT
// =====================================================

Table MAINTENANCE {
  id int [pk, increment, note: 'Primary key']
  opening_date date [not null, note: 'Maintenance opening date']
  description text [note: 'Maintenance description']
  assigned_to_professional_id int [ref: > PROFESSIONAL.id, note: 'Assigned professional']
  documents varchar(500) [note: 'Related documents']
  end_date date [note: 'Maintenance end date']
}

Table MAINTENANCE_FOLLOW_UP {
  id int [pk, increment, note: 'Primary key']
  maintenance_id int [ref: > MAINTENANCE.id, not null, note: 'Maintenance reference']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  description text [note: 'Follow-up description']
  documents varchar(500) [note: 'Related documents']
}

// =====================================================
// HR ISSUES MANAGEMENT
// =====================================================

Table HR_ISSUES {
  id int [pk, increment, note: 'Primary key']
  date date [not null, note: 'Issue date']
  affected_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Affected professional']
  registering_professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional who registered']
  referred_to varchar(255) [note: 'Referred to (free text)']
  documents varchar(500) [note: 'Related documents']
  end_date date [note: 'Issue resolution date']
}

Table HR_ISSUES_FOLLOW_UP {
  id int [pk, increment, note: 'Primary key']
  hr_issue_id int [ref: > HR_ISSUES.id, not null, note: 'HR issue reference']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  description text [note: 'Follow-up description']
  documents varchar(500) [note: 'Related documents']
}

// =====================================================
// PROJECT AND COMMISSION MANAGEMENT
// =====================================================

Table PROJECT_COMMISSION {
  id int [pk, increment, note: 'Primary key']
  name varchar(255) [not null, note: 'Project/Commission name']
  start_date date [note: 'Start date']
  estimated_end_date date [note: 'Estimated end date']
  responsible_professional_id int [ref: > PROFESSIONAL.id, note: 'Responsible professional']
  description text [note: 'Project description']
  notes text [note: 'Additional notes']
  documents varchar(500) [note: 'Related documents']
  type varchar(20) [note: 'Type: Projecte, Comissio']
}

Table PROJECT_COMMISSION_ASSIGNMENT {
  id int [pk, increment, note: 'Primary key']
  project_commission_id int [ref: > PROJECT_COMMISSION.id, not null, note: 'Project/Commission reference']
  professional_id int [ref: > PROFESSIONAL.id, not null, note: 'Professional reference']
  assignment_date date [note: 'Assignment date']
  status varchar(50) [note: 'Assignment status']
  notes text [note: 'Assignment notes']
}

Table PROJECT_COMMISSION_DOCUMENTS {
  id int [pk, increment, note: 'Primary key']
  project_commission_id int [ref: > PROJECT_COMMISSION.id, not null, note: 'Project/Commission reference']
  professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that uploaded the document']
  file_name varchar(255) [note: 'File name']
  original_name varchar(255) [note: 'Original file name']
  file_path varchar(500) [note: 'File path in filesystem']
  file_size int [note: 'File size in bytes']
  mime_type varchar(100) [note: 'MIME type of the file']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

Table PROJECT_COMMISSION_NOTE {
  id int [pk, increment, note: 'Primary key']
  project_commission_id int [ref: > PROJECT_COMMISSION.id, note: 'Project/Commission reference']
  notes text [note: 'Project/Commission notes']
  professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that created the note']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

// =====================================================
// QUIZ MANAGEMENT
// =====================================================

Table QUIZ {
  id int [pk, increment, note: 'Primary key']
  question text [note: 'Question']
}

// =====================================================
// INDEXES FOR OPTIMIZATION
// =====================================================

//Table PROFESSIONAL {
//  indexes {
//    (name, surname1) [name: 'idx_professional_name']
//    email [name: 'idx_professional_email']
//    login [name: 'idx_professional_login']
//  }
//}
//
//Table RECORD {
//  indexes {
//    date [name: 'idx_record_date']
//    type [name: 'idx_record_type']
//  }
//}
//
//Table COURSE {
//  indexes {
//    (start_date, end_date) [name: 'idx_course_date']
//  }
//}
//
//Table WORK_FOLLOW_UP {
//  indexes {
//    follow_up_date [name: 'idx_work_follow_up_date']
//  }
//}
//
//Table EVALUATION {
//  indexes {
//    evaluation_date [name: 'idx_evaluation_date']
//  }
//}
//
//Table ACCIDENT {
//  indexes {
//    start_date [name: 'idx_accident_date']
//  }
//}
//
//Table MAINTENANCE {
//  indexes {
//    opening_date [name: 'idx_maintenance_date']
//  }
//}
//
//Table HR_ISSUES {
//  indexes {
//    date [name: 'idx_hr_issues_date']
//  }
//}
//
//Table PROJECT_COMMISSION {
//  indexes {
//    (start_date, end_date) [name: 'idx_project_date']
//  }
//}

// =====================================================
// NEW IMPLEMENTED TABLES (Notes and Documents System)
// =====================================================

Table PROFESSIONAL_NOTE {
  id int [pk, increment, note: 'Primary key']
  professional_id int [ref: > PROFESSIONAL.id, note: 'Professional reference']
  notes text [note: 'Professional notes']
  created_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that created the note']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

Table PROFESSIONAL_DOCUMENT {
  id int [pk, increment, note: 'Primary key']
  file_name varchar(255) [note: 'File name']
  original_name varchar(255) [note: 'Original file name']
  file_path varchar(500) [note: 'File path in filesystem']
  file_size int [note: 'File size in bytes']
  mime_type varchar(100) [note: 'MIME type of the file']
  professional_id int [ref: > PROFESSIONAL.id, note: 'Professional reference']
  uploaded_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that uploaded the document']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

Table CENTER_NOTE {
  id int [pk, increment, note: 'Primary key']
  center_id int [ref: > CENTER.id, note: 'Center reference']
  notes text [note: 'Center notes']
  created_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that created the note']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

Table CENTER_DOCUMENT {
  id int [pk, increment, note: 'Primary key']
  file_name varchar(255) [note: 'File name']
  original_name varchar(255) [note: 'Original file name']
  file_path varchar(500) [note: 'File path in filesystem']
  file_size int [note: 'File size in bytes']
  mime_type varchar(100) [note: 'MIME type of the file']
  center_id int [ref: > CENTER.id, note: 'Center reference']
  uploaded_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that uploaded the document']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

Table MATERIAL_ASSIGNMENT_NOTE {
  id int [pk, increment, note: 'Primary key']
  material_assignment_id int [ref: > MATERIAL_ASSIGNMENT.id, note: 'Material assignment reference']
  notes text [note: 'Material assignment notes']
  created_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that created the note']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}

Table MATERIAL_ASSIGNMENT_DOCUMENT {
  id int [pk, increment, note: 'Primary key']
  file_name varchar(255) [note: 'File name']
  original_name varchar(255) [note: 'Original file name']
  file_path varchar(500) [note: 'File path in filesystem']
  file_size int [note: 'File size in bytes']
  mime_type varchar(100) [note: 'MIME type of the file']
  material_assignment_id int [ref: > MATERIAL_ASSIGNMENT.id, note: 'Material assignment reference']
  uploaded_by_professional_id int [ref: > PROFESSIONAL.id, note: 'Professional that uploaded the document']
  created_at timestamp [note: 'Creation timestamp']
  updated_at timestamp [note: 'Update timestamp']
}
